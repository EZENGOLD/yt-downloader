$color-principal: #346a5b;
$color-second: #3aa874;
$color-yellow: #dfa100;
$color-red: #c80707;
$color-green: #008000;
$color-card: #ffffff;
$color-background: #f5f5f5;
$color-text: #1e201f;

$theme-colors: ("principal", $color-principal), ("second", $color-second), ("yellow", $color-yellow),
  ("red", $color-red), ("green", $color-green);

$theme-sizes: "sm", "md", "lg";

@font-face {
  font-family: "Exo";
  src: local("Exo"), url(../../assets/fonts/Exo/Exo2-Regular.ttf) format("truetype");
}

@font-face {
  font-family: "Exo-Medium";
  src: local("Exo-Medium"), url(../../assets/fonts/Exo/Exo2-Medium.ttf) format("truetype");
}

@font-face {
  font-family: "Exo-SemiBold";
  src: local("Exo-SemiBold"), url(../../assets/fonts/Exo/Exo2-SemiBold.ttf) format("truetype");
}

@font-face {
  font-family: "Exo-Bold";
  src: local("Exo-Bold"), url(../../assets/fonts/Exo/Exo2-Bold.ttf) format("truetype");
}

@font-face {
  font-family: "Pacifico";
  src: local("Pacifico"), url(../../assets/fonts/Pacifico/Pacifico-Regular.ttf) format("truetype");
}

* {
  margin: 0;
  padding: 0;
  font-size: 14px;
  box-sizing: border-box;
  font-family: "Exo", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell,
    "Open Sans", "Helvetica Neue", sans-serif;
}

*:focus {
  outline: none;
}

body {
  height: 100vh;
  width: 100vw;
  overflow-y: hidden;
  display: flex;
}

a {
  text-decoration: none;
}

.overflow-visible {
  overflow: visible !important;
}
.overflow-unset {
  overflow: unset !important;
}

.cursor-pointer {
  cursor: pointer;
}
.cursor-default {
  cursor: default;
}

.white-space-nowrap {
  white-space: nowrap !important;
}
.text-tail {
  text-overflow: ellipsis !important;
}

@each $nb in (5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100) {
  .w-#{$nb} {
    width: percentage($nb / 100) !important;
  }
  .h-#{$nb} {
    height: percentage($nb / 100) !important;
  }
}

@each $nb in (50, 60, 70, 80, 90, 100, 125, 150, 175, 200) {
  .font-#{$nb} {
    font-size: percentage($nb / 100) !important;
  }
}

@each $nb in (5, 10, 15, 20, 25, 30, 35, 40, 45, 50) {
  .rounded-#{$nb} {
    border-radius: #{$nb}px !important;
  }
}

@each $theme in $theme-colors {
  .text-#{nth($theme, 1)} {
    color: nth($theme, 2) !important;
  }
  .bg-#{nth($theme, 1)} {
    background-color: nth($theme, 2) !important;
  }
  .border-#{nth($theme, 1)} {
    border: 1px solid #{nth($theme, 2)}55 !important;
  }
  .border-top-#{nth($theme, 1)} {
    border-top: 1px solid #{nth($theme, 2)}55 !important;
  }
  .border-bottom-#{nth($theme, 1)} {
    border-bottom: 1px solid #{nth($theme, 2)}55 !important;
  }
  .border-left-#{nth($theme, 1)} {
    border-left: 1px solid #{nth($theme, 2)}55 !important;
  }
  .border-right-#{nth($theme, 1)} {
    border-right: 1px solid #{nth($theme, 2)}55 !important;
  }
}

.ezen {
  &-container {
    width: 100vw;
    height: 100vh;
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    padding: 20px;
    position: relative;
  }

  @keyframes asideAppear {
    0% {
      transform: translateX(-200px);
      opacity: 0;
    }
    50% {
      transform: translateX(-10px);
      opacity: 0.5;
    }
    100% {
      transform: translateX(0px);
      opacity: 1;
    }
  }
  &-aside {
    height: calc(100vh - 40px);
    width: 400px;
    border-radius: 15px;
    animation: asideAppear 500ms 0ms;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    overflow: hidden;
    transition: filter 0.5s linear;
  }

  &-content {
    height: calc(100vh - 40px);
    width: calc(100% - 420px);
    animation: fadeIn 0.5s;
  }

  &-modal {
    transition: all 0.2s ease-in-out;

    &-wrapper {
      position: absolute;
      top: 0;
      left: 0;
      height: 100vh;
      width: 100vw;
      z-index: 10000;
      // transition: filter 0.5s linear, background 0.2s ease-in-out;
    }
  }

  /* BUTTONS */
  &-btn {
    @mixin buttoner {
      height: 35px;
      min-width: 30px;
      padding: 0 10px;
      outline: none;
      border: 0px;
      color: white;
      background-color: $color-principal;
      border-radius: 2px;
      outline: none;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    @include buttoner();

    &-sm {
      @include buttoner();
      height: 30px;
    }

    &-md {
      @include buttoner();
      height: 35px;
    }

    &-lg {
      @include buttoner();
      height: 50px;
    }

    &-outline {
      @include buttoner();
      background-color: transparent;
      color: $color-principal;
      border: 0.7px solid $color-principal;

      &:hover {
        background-color: #{$color-principal}11;
        transition: all 0.1s ease-in-out;
        -o-transition: all 0.1s ease-in-out;
      }

      &-sm {
        @include buttoner();
        height: 30px;
        background-color: transparent;
        color: $color-principal;
        border: 0.7px solid $color-principal;

        &:hover {
          background-color: #{$color-principal}11;
          transition: all 0.1s ease-in-out;
          -o-transition: all 0.1s ease-in-out;
        }
      }

      &-md {
        @include buttoner();
        height: 35px;
        background-color: transparent;
        color: $color-principal;
        border: 0.7px solid $color-principal;

        &:hover {
          background-color: #{$color-principal}11;
          transition: all 0.1s ease-in-out;
          -o-transition: all 0.1s ease-in-out;
        }
      }

      &-lg {
        @include buttoner();
        height: 50px;
        background-color: transparent;
        color: $color-principal;
        border: 0.7px solid $color-principal;

        &:hover {
          background-color: #{$color-principal}11;
          transition: all 0.1s ease-in-out;
          -o-transition: all 0.1s ease-in-out;
        }
      }
    }

    @each $theme in $theme-colors {
      &-#{nth($theme, 1)} {
        @include buttoner();
        background-color: nth($theme, 2);

        &-sm {
          @include buttoner();
          height: 30px;
          background-color: nth($theme, 2);
        }

        &-md {
          @include buttoner();
          height: 35px;
          background-color: nth($theme, 2);
        }

        &-lg {
          @include buttoner();
          height: 50px;
          background-color: nth($theme, 2);
        }

        &-outline {
          @include buttoner();
          background-color: transparent;
          color: nth($theme, 2);
          border: 0.7px solid nth($theme, 2);

          &:hover {
            background-color: #{nth($theme, 2)}11;
            transition: all 0.1s ease-in-out;
            -o-transition: all 0.1s ease-in-out;
          }

          &-sm {
            @include buttoner();
            height: 30px;
            background-color: transparent;
            color: nth($theme, 2);
            border: 0.7px solid nth($theme, 2);

            &:hover {
              background-color: #{nth($theme, 2)}11;
              transition: all 0.1s ease-in-out;
              -o-transition: all 0.1s ease-in-out;
            }
          }

          &-md {
            @include buttoner();
            height: 35px;
            background-color: transparent;
            color: nth($theme, 2);
            border: 0.7px solid nth($theme, 2);

            &:hover {
              background-color: #{nth($theme, 2)}11;
              transition: all 0.1s ease-in-out;
              -o-transition: all 0.1s ease-in-out;
            }
          }

          &-lg {
            @include buttoner();
            height: 50px;
            background-color: transparent;
            color: nth($theme, 2);
            border: 0.7px solid nth($theme, 2);

            &:hover {
              background-color: #{nth($theme, 2)}11;
              transition: all 0.1s ease-in-out;
              -o-transition: all 0.1s ease-in-out;
            }
          }
        }
      }
    }
  }

  /* INPUTS */
  @mixin no-indicator {
    -webkit-appearance: none;
    -moz-appearance: none;
  }

  @mixin feedback($color) {
    width: 100%;
    text-align: right;
    font-size: 85%;
    color: $color;
    position: absolute;
    top: 100%;
  }

  &-input {
    background-color: transparent;
    border: 0.5px solid #c4c4c4;
    height: 35px;
    padding: 0 5px;

    &.invalid {
      border: 1px solid $color-red;
    }

    &-wrapper {
      border: 0.5px solid #c4c4c4;
      display: flex;
      align-items: center;
      justify-content: space-between;
      position: relative;

      input {
        background-color: transparent;
        height: 35px;
        width: 100%;
        padding: 0 5px;
        border: 0px;
      }

      textarea {
        background-color: transparent;
        border: 0px;
        min-height: 35px;
        width: 100%;
        padding: 5px;
        resize: none;
        outline: none;

        &.resizable,
        &.resizable-y {
          resize: vertical;
        }

        &.resizable-x {
          resize: horizontal;
        }

        &.resizable-xy {
          resize: both;
        }
      }

      select {
        background-color: transparent;
        height: 35px;
        width: 100%;
        padding: 0 5px;
        border: 0px;
        @include no-indicator();
      }

      .left-icon,
      .right-icon {
        text-align: center;
        width: 35px;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
      }

      &.invalid {
        border: 1px solid $color-red;
      }

      .feedback {
        position: absolute;
        display: none;
      }

      &.invalid .feedback {
        display: block;
        @include feedback($color-red);
      }
    }
  }

  &-select {
    background-color: transparent;
    border: 0.5px solid #c4c4c4;
    height: 35px;
    padding: 0 5px;

    &.no-indicator {
      @include no-indicator();
    }

    &.invalid {
      border: 1px solid $color-red;
    }
  }

  &-textarea {
    background-color: transparent;
    border: 0.5px solid #c4c4c4;
    min-height: 35px;
    padding: 5px;
    resize: none;
    outline: none;

    &.resizable,
    &.resizable-y {
      resize: vertical;
    }

    &.resizable-x {
      resize: horizontal;
    }

    &.resizable-xy {
      resize: both;
    }

    &.invalid {
      border: 1px solid $color-red;
    }
  }

  /* PILLS */
  &-pill {
    @mixin piller($color: $color-principal, $is-bordered: false) {
      height: 35px;
      min-width: 30px;
      padding: 0 10px;
      outline: none;
      display: flex;
      cursor: pointer;
      align-items: center;
      justify-content: center;
      @if $is-bordered == true {
        color: darken($color, 10%);
        background-color: #{$color}22;
        border: 0.5px solid #{$color}55;
      } @else {
        color: darken($color, 10%);
        background-color: #{$color}22;
      }
    }

    height: 35px;
    min-width: 30px;
    padding: 0 10px;
    outline: none;
    display: flex;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    color: $color-principal;
    background-color: #{$color-principal}22;
    border-radius: 3px;

    &.bordered {
      border: 0.5px solid #{$color-principal}55;
    }

    &-sm {
      @include piller($color-principal, false);
      height: 30px;
      min-width: 30px;
    }

    &-md {
      @include piller($color-principal, false);
      height: 35px;
      min-width: 30px;
    }

    &-lg {
      @include piller($color-principal, false);
      height: 50px;
      min-width: 30px;
    }

    @each $theme in $theme-colors {
      &-#{nth($theme, 1)} {
        @include piller(nth($theme, 2), false);

        &-sm {
          @include piller(nth($theme, 2), false);
          height: 30px;
          min-width: 30px;
        }

        &-md {
          @include piller(nth($theme, 2), false);
          height: 40px;
          min-width: 30px;
        }

        &-lg {
          @include piller(nth($theme, 2), false);
          height: 50px;
          min-width: 30px;
        }

        &-outline {
          @include piller(nth($theme, 2), true);
          border: 0.5 solid nth($theme, 2);

          &-sm {
            @include piller(nth($theme, 2), true);
            border: 0.5 solid nth($theme, 2);
            height: 30px;
            min-width: 30px;
          }

          &-md {
            @include piller(nth($theme, 2), true);
            border: 0.5 solid nth($theme, 2);
            height: 40px;
            min-width: 30px;
          }

          &-lg {
            @include piller(nth($theme, 2), true);
            border: 0.5 solid nth($theme, 2);
            height: 50px;
            min-width: 30px;
          }
        }
      }
    }
  }
}

// for tablets
@media only screen and (max-width: 992px) {
  //
}
